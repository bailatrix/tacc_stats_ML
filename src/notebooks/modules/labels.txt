GENERAL RULES: 
  - E meaning that the counter is an event counter,
  - W=<BITS> meaning that the counter is <BITS> wide (as opposed to 64),
  - C meaning that the value is a control register, not a counter,
  - U=<STR> meaning that the value is in units specified by <STR>.

 The required order of registers is:
  -# Control registers in order
  -# Counter registers in order
  -# Fixed counter register

Fixed Counter Registers - These counters always count the same events
Fixed Counter 0 - Instructions Retired
Fixed Counter 1 - Core Clock Cycles
Fixed Counter 2 - Reference Clock Cycles

================================================================================================================================

Base: block - block device statistics (per device)
Devices: ['md1', 'sda', 'sdb']
Keys:
  X(rd_ios,        "E",        "read requests processed")
  X(rd_merges,     "E",        "read requests merged with in-queue requests")
  X(rd_sectors,    "E,U=512B", "sectors read")
  X(rd_ticks,      "E,U=ms",   "wait time for read requests")
  X(wr_ios,        "E",        "write requests processed")
  X(wr_merges,     "E",        "write requests merged with in-queue requests")
  X(wr_sectors,    "E,U=512B", "sectors written")
  X(wr_ticks,      "E,U=ms",   "wait time for write requests")
  X(in_flight,     "",         "requests in flight")
  X(io_ticks,      "E,U=ms",   "time active")
  X(time_in_queue, "E,U=ms",   "wait time for all requests")

Notes:

Need to account for units. According to block/stat.txt, in /sys/block/DEV/stat sector means 512B (as opposed to real sector size of device). All X_ticks members and time_in_queue are in ms. 

================================================================================================================================

Base: cpu - scheduler accounting (per CPU)
Devices: ['22','20','21','11','10','13','12','15','14','17','16','19','18','23','1','0','3','2','5','4','7','6','9','8']
Keys:
  X(user,    "E,U=cs", "time in user mode")
  X(nice,    "E,U=cs", "time in user mode with low priority")
  X(system,  "E,U=cs", "time in system mode")
  X(idle,    "E,U=cs", "time in idle task")
  X(iowait,  "E,U=cs", "time in I/O wait")
  X(irq,     "E,U=cs", "time in IRQ")
  X(softirq, "E,U=cs", "time in softIRQ")

Notes:



================================================================================================================================

Base: ib - Infiniband
Devices: ['mlx4_0.1']
Keys: 
  X(excessive_buffer_overrun_errors, "E,W=32", "")
  X(link_downed, "E,W=32", "failed link error recoveries")
  X(link_error_recovery, "E,W=32", "successful link error recoveries")
  X(local_link_integrity_errors, "E,W=32", "")
  X(port_rcv_constraint_errors, "E,W=32", "packets discarded due to constraint")
  X(port_rcv_data, "E,W=32,U=4B", "data received")
  X(port_rcv_errors, "E,W=32", "bad packets received")
  X(port_rcv_packets, "E,W=32", "packets received")
  X(port_rcv_remote_physical_errors, "E,W=32", "EBP packets received")
  X(port_rcv_switch_relay_errors, "E,W=32", "")
  X(port_xmit_constraint_errors, "E,W=32", "packets not transmitted due to constraint")
  X(port_xmit_data, "E,W=32,U=4B", "data transmitted")
  X(port_xmit_discards, "E,W=32", "packets discarded due to down or congested port")
  X(port_xmit_packets, "E,W=32", "packets transmitted")
  X(port_xmit_wait, "E,,W=32,U=ms", "wait time for credits or arbitration")
  X(symbol_error, "E,W=32", "minor link errors")
  X(VL15_dropped, "E,W=32", "")

Notes: 



================================================================================================================================

Base: ib_ext - Infiniband
Devices: ['mlx4_0/1']
Keys: 
  X(port_select, "C", "")
  X(counter_select, "C", "")
  X(port_xmit_data, "E,U=4B", "")
  X(port_rcv_data, "E,U=4B", "")
  X(port_xmit_pkts, "E", "")
  X(port_rcv_pkts, "E", "")
  X(port_unicast_xmit_pkts, "E", "")
  X(port_unicast_rcv_pkts, "E", "")
  X(port_multicast_xmit_pkts, "E", "")
  X(port_multicast_rcv_pkts, "E", "")

Notes: 



================================================================================================================================

Base: ib_sw - Infiniband
Devices: ['mlx4_0/1']
Keys: 
  X(rx_bytes, "E,U=4B", "")
  X(rx_packets, "E", "")
  X(tx_bytes, "E,U=4B", "")
  X(tx_packets, "E", "")

Notes: 

Collects IB HCA/PORT statistics by querying the extended performance counters of the switch port to which the HCA/PORT is connected.  This is used on Ranger, where the HCA firmware only exports the (useless) 32-bit performance counters, but the switch port does provide 64-bit counters.

================================================================================================================================

Base: intel_8pmc3 - Intel Performance Monitoring Version 3
Devices: ['22','20','21','11','10','13','12','15','14','17','16','19','18','23','1','0','3','2','5','4','7','6','9','8']
Keys: 


Notes: 

IA32_PMCx (CTRx) MSRs start at address 0C1H and occupy a contiguous block of MSR address space; the number of MSRs per logical processor is reported using CPUID.0AH:EAX[15:8]. IA32_PERFEVTSELx (CTLx) MSRs start at address 186H and occupy a contiguous block of MSR address space. Each performance event select register is paired with a corresponding performance counter in the 0C1H address block.

================================================================================================================================

Base: intel_hsw_cbo - Intel Haswell Caching Agents (CBos)
Devices: ['1/7', '1/6', '1/5', '1/4', '1/3', '1/2', '1/1', '1/0', '0/6', '0/7', '0/4', '0/5', '0/2', '0/3', '0/0', '0/1', '0/10', '0/11', '1/9', '1/8', '0/8', '0/9', '1/11', '1/10']
Keys: 
    X(CTL0, "C", "")
    X(CTL1, "C", "")
    X(CTL2, "C", "")
    X(CTL3, "C", "")
    X(CTR0, "E,W=48", "")
    X(CTR1, "E,W=48", "")
    X(CTR2, "E,W=48", "")
    X(CTR3, "E,W=48", "")

Notes: 

There are 4 configurable counter registers per CBo. These routines only collect data from core_id 0 msr on each socket. There are 4 configure, 4 counter, 1 CBo global control, and 1 CBo filter registers per CBo. These registers control every counter within a CBo. They can freeze individual CBos control  and counter registers. \note\ Documentation says they are 32 bit but only 64 bit works.

================================================================================================================================

Base: intel_hsw_hau - Intel Haswell Home Agent Unit
Devices: ['ff/12.5', '7f/12.1', 'ff/12.1', '7f/12.5']
Keys: 
  X(CTL0, "C", "")
  X(CTL1, "C", "")
  X(CTL2, "C", "")
  X(CTL3, "C", "")
  X(CTR0, "E,W=48", "")
  X(CTR1, "E,W=48", "")
  X(CTR2, "E,W=48", "")
  X(CTR3, "E,W=48", "")

Notes: 



================================================================================================================================

Base: intel_hsw_imc - Intel Haswell Integrated Memory Controller
Devices: ['ff/14.1', 'ff/14.0', '7f/17.1', '7f/17.0', '7f/14.0', '7f/14.1', 'ff/17.0', 'ff/17.1']
Keys: 
  X(CTL0, "C", "")
  X(CTL1, "C", "")
  X(CTL2, "C", "")
  X(CTL3, "C", "")
  X(CTR0, "E,W=48", "")
  X(CTR1, "E,W=48", "")
  X(CTR2, "E,W=48", "")
  X(CTR3, "E,W=48", "")
  X(FIXED_CTR,"E,W=48","")


Notes: 


================================================================================================================================

Base: intel_hsw_qpi - Intel Haswell QPI Link Layer
Devices: ['ff/08.2', '7f/08.2', '7f/09.2', 'ff/09.2']
Keys: 
  X(CTL0, "C", "")
  X(CTL1, "C", "")
  X(CTL2, "C", "")
  X(CTL3, "C", "")
  X(CTR0, "E,W=48,U=flt", "")
  X(CTR1, "E,W=48,U=flt", "")
  X(CTR2, "E,W=48,U=flt", "")
  X(CTR3, "E,W=48,U=flt", "")


Notes: 



================================================================================================================================

Base: intel_hsw_r2pci - Intel Haswell Ring to PCIe Agent
Devices: ['7f/10.1', 'ff/10.1']
Keys: 
  X(CTL0, "C", "")
  X(CTL1, "C", "")
  X(CTL2, "C", "")
  X(CTL3, "C", "")
  X(CTR0, "E,W=44", "")
  X(CTR1, "E,W=44", "")
  X(CTR2, "E,W=44", "")
  X(CTR3, "E,W=44", "")

Notes: 



================================================================================================================================

Base: intel_rapl - Intel RAPL Counters
Devices: ['1', '0']
Keys: 
  X(MSR_PKG_ENERGY_STATUS, "E,W=32,U=mJ", "")
  X(MSR_PP0_ENERGY_STATUS, "E,W=32,U=mJ", "")
  X(MSR_DRAM_ENERGY_STATUS, "E,W=32,U=mJ", "")

Notes: 



================================================================================================================================

Base: llite - Lustre filesystem usage (per mount)
Devices: ['wombat-clilov']
Keys: 
  X(read_bytes, "E,U=B", "")
  X(write_bytes, "E,U=B", "")
  X(direct_read, "E,U=B", "")
  X(direct_write, "E,U=B", "")
  X(osc_read, "E,U=B", "")
  X(osc_write, "E,U=B", "")
  X(dirty_pages_hits, "E", "")
  X(dirty_pages_misses, "E", "")
  X(ioctl, "E", "")
  X(open, "E", "")
  X(close, "E", "")
  X(mmap, "E", "")
  X(seek, "E", "")
  X(fsync, "E", "")
  X(setattr, "E", "")
  X(truncate, "E", "")
  X(flock, "E", "")
  X(getattr, "E", "")
  X(statfs, "E", "")
  X(alloc_inode, "E", "")
  X(setxattr, "E", "")
  X(getxattr, "E", "")
  X(listxattr, "E", "")
  X(removexattr, "E", "")
  X(inode_permission, "E", "")
  X(readdir, "E", "")
  X(create, "E", "")
  X(lookup, "E", "")
  X(link, "E", "")
  X(unlink, "E", "")
  X(symlink, "E", "")
  X(mkdir, "E", "")
  X(rmdir, "E", "")
  X(mknod, "E", "")
  X(rename, "E", "")

Notes: 



================================================================================================================================

Base: mdc - Lustre network usage
Devices: ['wombat-clilov', 'panda-clilov']
Keys: 
  X(ldlm_cancel, "E", "")
  X(mds_close, "E", "")
  X(mds_getattr, "E", "")
  X(mds_getattr_lock, "E", "")
  X(mds_getxattr, "E", "")
  X(mds_readpage, "E", "")
  X(mds_statfs, "E", "")
  X(mds_sync, "E", "")
  X(reqs, "E", "")
  X(wait, "E,U=us", "")

Notes: 



================================================================================================================================

Base: mem - memory usage (per socket)
Devices: ['1', '0']
Keys: 
  X(MemTotal, "U=KB", "")
  X(MemFree, "U=KB", "")
  X(MemUsed, "U=KB", "")
  X(Active, "U=KB", "")
  X(Inactive, "U=KB", "")
  X(Dirty, "U=KB", "")
  X(Writeback, "U=KB", "")
  X(FilePages, "U=KB", "")
  X(Mapped, "U=KB", "")
  X(AnonPages, "U=KB", "")
  X(PageTables, "U=KB", "")
  X(NFS_Unstable, "U=KB", "")
  X(Bounce, "U=KB", "")
  X(Slab, "U=KB", "")
  X(AnonHugePages, "U=KB", "")
  X(HugePages_Total, "", "")
  X(HugePages_Free, "", "")

Notes: 



================================================================================================================================

Base: net - network device usage (per device)
Devices: ['ib0.8447', 'lo', 'enp129s0f0', 'penp129s0f0', 'ib0']
Keys: 
  X(collisions, "E", "")
  X(multicast, "E", "")
  X(rx_bytes, "E,U=B", "")
  X(rx_compressed, "E", "")
  X(rx_crc_errors, "E", "")
  X(rx_dropped, "E", "")
  X(rx_errors, "E", "")
  X(rx_fifo_errors, "E", "")
  X(rx_frame_errors, "E", "")
  X(rx_length_errors, "E", "")
  X(rx_missed_errors, "E", "")
  X(rx_over_errors, "E", "")
  X(rx_packets, "E", "")
  X(tx_aborted_errors, "E", "")
  X(tx_bytes, "E,U=B", "")
  X(tx_carrier_errors, "E", "")
  X(tx_compressed, "E", "")
  X(tx_dropped, "E", "")
  X(tx_errors, "E", "")
  X(tx_fifo_errors, "E", "")
  X(tx_heartbeat_errors, "E", "")
  X(tx_packets, "E", "")
  X(tx_window_errors, "E", "")

Notes: 



================================================================================================================================

Base: numa - weird NUMA statistics (per socket)
Devices: ['1', '0']
Keys: 
  X(numa_hit, "E", "")
  X(numa_miss, "E", "")
  X(numa_foreign, "E", "")
  X(interleave_hit, "E", "")
  X(local_node, "E", "")
  X(other_node, "E", "")

Notes: 



================================================================================================================================

Base: osc - Lustre filesystem usage
Devices: ['wombat-clilov', 'panda-clilov']
Keys: 
  X(read_bytes, "E,U=B", "")
  X(write_bytes, "E,U=B", "")
  X(ost_destroy, "E", "")
  X(ost_punch, "E", "")
  X(ost_read, "E", "")
  X(ost_setattr, "E", "")
  X(ost_statfs, "E", "")
  X(ost_write, "E", "")
  X(reqs, "E", "")
  X(wait, "E,U=us", "")

Notes: 



================================================================================================================================

Base: proc - Process specific data (MaxRSS, executable name etc.)
Devices: ['cvmfs2/6579/0-23/0-1', 'cvmfs2/6177/0-23/0-1', 'pw.x/7299/7/0-1', 'pw.x/7298/6/0-1', 'pw.x/7294/2/0-1', 'pw.x/7293/1/0-1', 'pw.x/7297/5/0-1', 'pw.x/7296/4/0-1', 'pw.x/7292/0/0-1', 'pw.x/7295/3/0-1']
Keys: 
  X(Uid, "", "user id")
  X(VmPeak, "U=kB", "Peak vm size")
  X(VmSize, "U=kB", "Current vm size")
  X(VmLck, "U=kB", "Locked mem size")
  X(VmHWM, "U=kB", "Peak resident set size")
  X(VmRSS, "U=kB", "Current resident set size")
  X(VmData, "U=kB", "size of data")
  X(VmStk, "U=kB", "size of stack")
  X(VmExe, "U=kB", "size of text")
  X(VmLib, "U=kB", "shared lib code size")
  X(VmPTE, "U=kB", "page table entry size")
  X(VmSwap, "U=kB", "swapped vm size")
  X(Threads, "", "number of threads")

Notes: 



================================================================================================================================

Base: ps - process statistics
Devices: ['-']
Keys: 
  X(ctxt, "E", "context switches")
  X(processes, "E", "forks")
  X(load_1, "", "1 minute load average (* 100)")
  X(load_5, "", "5 minute load average (* 100)")
  X(load_15, "", "15 minute load average (* 100)")
  X(nr_running, "", "")
  X(nr_threads, "", "")

Notes: 



================================================================================================================================

Base: tmpfs - ram-backed filesystem usage (per mount)
Devices: ['/run', '/dev/shm']
Keys: 
  X(bytes_used, "U=B", "bytes used")
  X(files_used, "", "files used")

Notes: 



================================================================================================================================

Base: vfs - dentry/file/inode cache usage
Devices: ['-']
Keys:
    X(dentry_use, "", "number of directory entries in use")
    X(file_use, "", "number of file handles in use")
    X(inode_use, "", "number of inodes in use")
    
Notes: 



================================================================================================================================

Base: vm - virtual memory statistics
Devices: ['-']
Keys: 
  X(nr_anon_transparent_hugepages, "", ""), \
  X(pgpgin, "E,U=KB", ""), \
  X(pgpgout, "E,U=KB", ""), \
  X(pswpin, "E", ""), \
  X(pswpout, "E", ""), \
  X(pgalloc_normal, "E", ""), \
  X(pgfree, "E", ""), \
  X(pgactivate, "E", ""), \
  X(pgdeactivate, "E", ""), \
  X(pgfault, "E", ""), \
  X(pgmajfault, "E", ""), \
  X(pgrefill_normal, "E", ""), \
  X(pgsteal_normal, "E", ""), \
  X(pgscan_kswapd_normal, "E", ""), \
  X(pgscan_direct_normal, "E", ""), \
  X(pginodesteal, "E", ""), \
  X(slabs_scanned, "E", ""), \
  X(kswapd_steal, "E", ""), \
  X(kswapd_inodesteal, "E", ""), \
  X(pageoutrun, "E", ""), \
  X(allocstall, "E", ""), \
  X(pgrotated, "E", ""), \
  X(thp_fault_alloc, "E", ""), \
  X(thp_fault_fallback, "E", ""), \
  X(thp_collapse_alloc, "E", ""), \
  X(thp_collapse_alloc_failed, "E", ""), \
  X(thp_split, "E", "")

Notes: 



================================================================================================================================